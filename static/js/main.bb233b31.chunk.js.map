{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","placeholder","onClick","toggleMode","role","htmlfor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","join","document","getElementById","select","navigator","clipboard","writeText","length","prototype","PropTypes","string","isRequired","aboutText","defaultProps","Alert","alert","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bb233b31.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n        </li>  */}\r\n      </ul>\r\n \r\n      <form className=\"d-flex mx-2\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n      </form>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\nNavbar.prototype = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired                       \r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n   };\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Convert to Upperacse!\", \"Success\");\r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n        // console.log(\"Lowercase was clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Convert to Lowercase!\", \"Success\");\r\n    }\r\n\r\n    const handleClearClick = ()=>{\r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert(\"Text Cleared!\", \"Success\");\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        let text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to Clipboard!\", \"Success\");\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra spaces Removed!\", \"Success\");\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    // text = \"new text\"; //wrong way change the state\r\n    // setText(\"new text\"); //Correct way to change the state\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <h3>{props.heading}</h3>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='light'?'white':'gray', color: props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"10\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n            <button className=\"btn btn-info mx-1\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n            <button className=\"btn btn-warning mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n            <button className=\"btn btn-success mx-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-danger mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n        </div> \r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <h2>Your text Summary</h2>\r\n            <p>{text.split(\" \").length -1} words and {text.length} character</p>\r\n            {/* <p>word : {text.length==0?0:text.split(\" \").length} charactor :{text.length}</p> */}\r\n            {/* <p>{text.split(\" \").length} words and {text.length} characters</p> */}\r\n            <p>{0.008 *  text.split(\" \").length} Minutes read</p>\r\n            {/* <p>{12{}.length} Line</p> */}\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    // const capitalize = (word)=>{\r\n    //     const lower = word.toLowerCase();\r\n    //     return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    // }\r\n    return (\r\n        props.alert && <div className={`alert alert-success${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{props.alert.type}</strong>  {props.alert.msg}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport Navbar from './components/Navbar';\n// import About from './components/About';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n// \tBrowserRouter as Router,\n// \tSwitch,\n// \tRoute,\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enable or not\n  const [alert, setAlert] = useState(null); \n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = 'gray';\n      showAlert(\" Dark Mode has been Enabled \", \" Success!\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\" Light Mode has been Enabled \", \" Success!\");\n    }\n\n  }\n\n  return (\n    <> \n    {/* <Navbar title=\"TextUtils\" aboutText=\"About Us\" /> */}\n    {/* <Navbar/> */}\n\n    {/* <Router> */}\n      <Navbar title=\"TextUtils\"  mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n        {/* <Switch>\n            <Route exact path=\"/about\"> \n              <About/>\n            </Route>\n            <Route exact path=\"/\">  */}\n              <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n            {/* </Route>\n        </Switch> */}\n      </div>\n    {/* </Router> */}\n    {/* <About /> */}\n   </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}